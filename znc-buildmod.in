#!/bin/sh

ERROR="[ !! ]"
WARNING="[ ** ]"
OK="[ ok ]"

# Check if we got everything we need

check_binary()
{
	which $1 > /dev/null 2>&1
	if test $? = 1 ; then
		echo "${ERROR} Could not find $1. $2"
		exit 1
	fi
}

if test "x$CXX" = "x" ; then
	CXX="@CXX@"
fi
if test "x$CXX" = "x" ; then
	CXX=g++
fi

check_binary ${CXX} "What happened to your compiler?"

if test -z "$1"; then
	echo "${WARNING} USAGE: $0 <file.cpp> [file.cpp ... ]"
	exit 1
fi

CXXFLAGS="@CPPFLAGS@ @MODFLAGS@ -I@prefix@/include $CXXFLAGS"
LIBS="@LIBS@ $LIBS"
MODLINK="@MODLINK@ $MODLINK"
VERSION="@PACKAGE_VERSION@"

# Ugly cygwin stuff :(
if test -n "@LIBZNC@"; then
	prefix="@prefix@"
	exec_prefix="@exec_prefix@"
	LDFLAGS="-L@libdir@ $LDFLAGS"
	LIBS="-lznc $LIBS"
fi

while test -n "$1"
do
	FILE=$1
	shift

	MOD="${FILE%.cpp}"
	MOD="${MOD%.cc}"
	MOD="${MOD##*/}"

	if test ! -f "${FILE}"; then
		echo "${ERROR} Building \"${MOD}\" for ZNC $VERSION... File not found"
		exit 1
	else
		printf "Building \"${MOD}.so\" for ZNC $VERSION... "
		if ${CXX} ${CXXFLAGS} ${INCLUDES} ${LDFLAGS} ${MODLINK} -o "${MOD}.so" "${FILE}" ${LIBS} ; then
			echo "${OK}"
		else
			echo "${ERROR} Error while building \"${MOD}.so\""
			exit 1
		fi
	fi
done

exit 0
